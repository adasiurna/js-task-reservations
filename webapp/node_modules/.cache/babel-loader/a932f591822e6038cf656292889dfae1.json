{"ast":null,"code":"var _jsxFileName = \"/Users/ada/Desktop/Learning/js-task-reservations/webapp/src/ReservationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport Axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReservationForm = () => {\n  _s();\n\n  const [disabledTimes, setDisabledTimes] = useState([]);\n  const [listAllReservations, setListAllReservations] = useState([]);\n  const [reservationDate, setReservationDate] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  useEffect(() => {\n    Axios.get('http://localhost:3001/getReservations').then(response => {\n      setListAllReservations(response.data);\n    });\n  }, []);\n  console.log('reservationDate: ', reservationDate);\n  console.log('name: ', name);\n\n  const createReservation = () => {\n    const dublicate = listAllReservations.filter(reservation => reservation.time === reservationDate);\n\n    if (dublicate.length > 0) {\n      alert(\"This time is already taken, please choose another time.\");\n    } else {\n      Axios.post('http://localhost:3001/createReservation', {\n        name: name,\n        surname: surname,\n        time: reservationDate\n      }).then(response => {\n        setListAllReservations([...listAllReservations, {\n          name: name,\n          surname: surname,\n          time: reservationDate\n        }]);\n        setReservationDate(null);\n        setName(\"\");\n        setSurname(\"\");\n        alert(\"Dear \" + name + \",\\nRegistration was successful, your time is: \" + moment(reservationDate).format('YYYY-MM-DD, HH:mm'));\n      });\n    }\n  };\n\n  const isWeekday = date => {\n    const day = date.getDay();\n    return day !== 0 && day !== 6;\n  };\n\n  const handleDateChange = date => {\n    const disabledTimes = listAllReservations.filter(reservation => moment(reservation.time).format('YYYY MM DD') === moment(date).format('YYYY MM DD')).map(reservation => new Date(reservation.time));\n    console.log('disabledTimes', disabledTimes);\n    setDisabledTimes(disabledTimes);\n    setReservationDate(date);\n  }; //const disabledTimes = listAllReservations.map(reservation => new Date(reservation.time));\n\n\n  console.log('disabledTimes', disabledTimes);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"patientName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: name,\n        id: \"patientName\",\n        name: \"patientName\",\n        type: \"text\",\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"patientSurname\",\n        children: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: surname,\n        id: \"patientSurname\",\n        name: \"patientSurname\",\n        type: \"text\",\n        onChange: event => {\n          setSurname(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"patientSurname\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: reservationDate,\n        onChange: date => handleDateChange(date),\n        showTimeSelect: true,\n        minDate: moment().toDate(),\n        filterDate: isWeekday,\n        excludeTimes: disabledTimes,\n        dateFormat: \"yyyy MM dd, HH:mm\",\n        minTime: setHours(setMinutes(new Date(), 0), 8),\n        maxTime: setHours(setMinutes(new Date(), 0), 17),\n        calendarStartDay: 1,\n        timeFormat: \"HH:mm\",\n        onKeyDown: e => {\n          e.preventDefault();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: createReservation,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReservationForm, \"rQFc+NKJQp1yHH6JLjY/l9CjDd8=\");\n\n_c = ReservationForm;\nexport default ReservationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReservationForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","FormGroup","Label","Input","Button","Axios","DatePicker","moment","setHours","setMinutes","ReservationForm","disabledTimes","setDisabledTimes","listAllReservations","setListAllReservations","reservationDate","setReservationDate","name","setName","surname","setSurname","get","then","response","data","console","log","createReservation","dublicate","filter","reservation","time","length","alert","post","format","isWeekday","date","day","getDay","handleDateChange","map","Date","event","target","value","toDate","e","preventDefault"],"sources":["/Users/ada/Desktop/Learning/js-task-reservations/webapp/src/ReservationForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport Axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\n\n\nconst ReservationForm = () => {\n\n    const [disabledTimes, setDisabledTimes] = useState([]);\n    const [listAllReservations, setListAllReservations] = useState([]);\n    const [reservationDate, setReservationDate] = useState(null);\n    const [name, setName] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n\n    useEffect(() => {\n        Axios.get('http://localhost:3001/getReservations')\n            .then((response) => {\n                setListAllReservations(response.data);\n            })\n    }, []);\n\n    console.log('reservationDate: ', reservationDate);\n    console.log('name: ', name);\n\n    const createReservation = () => {\n        const dublicate = listAllReservations.filter(reservation => reservation.time === reservationDate);\n        if (dublicate.length > 0) {\n            alert(\"This time is already taken, please choose another time.\")\n        } else {\n            Axios.post('http://localhost:3001/createReservation', {name: name, surname: surname, time: reservationDate})\n                .then((response) => {\n                    setListAllReservations([...listAllReservations, {name: name, surname: surname, time: reservationDate}]);\n                    setReservationDate(null);\n                    setName(\"\");\n                    setSurname(\"\");\n                    alert(\"Dear \"+name+\",\\nRegistration was successful, your time is: \" + moment(reservationDate).format('YYYY-MM-DD, HH:mm'));\n                })\n        }\n    }\n  \n    const isWeekday = (date) => {\n      const day = date.getDay();\n      return day !== 0 && day !== 6;\n    };\n\n    const handleDateChange = (date) => {\n        const disabledTimes = listAllReservations.filter(reservation =>\n            moment(reservation.time).format('YYYY MM DD') === moment(date).format('YYYY MM DD')\n        ).map(reservation =>  new Date(reservation.time))\n        console.log('disabledTimes', disabledTimes);\n        setDisabledTimes(disabledTimes);\n        setReservationDate(date)\n    }\n\n    //const disabledTimes = listAllReservations.map(reservation => new Date(reservation.time));\n    console.log('disabledTimes', disabledTimes);\n\n  \n  return (\n    <Form>\n    <FormGroup>\n    <Label for=\"patientName\">\n      Name\n    </Label>\n    <Input\n      value={name}\n      id=\"patientName\"\n      name=\"patientName\"\n      type=\"text\"\n      onChange={(event) => {setName(event.target.value)}}\n    />\n  </FormGroup>\n    <FormGroup>\n    <Label for=\"patientSurname\">\n      Surname\n    </Label>\n    <Input\n      value={surname}\n      id=\"patientSurname\"\n      name=\"patientSurname\"\n      type=\"text\"\n      onChange={(event) => {setSurname(event.target.value)}}\n    />\n  </FormGroup>\n  <FormGroup>\n    <Label for=\"patientSurname\">\n      Date\n    </Label>\n      <DatePicker \n        selected={reservationDate} \n        onChange={(date) => handleDateChange(date)}\n        showTimeSelect\n        minDate={moment().toDate()}\n        filterDate={isWeekday}\n        excludeTimes={disabledTimes}\n        dateFormat=\"yyyy MM dd, HH:mm\"\n        minTime={setHours(setMinutes(new Date(), 0), 8)}\n        maxTime={setHours(setMinutes(new Date(), 0), 17)}\n        calendarStartDay={1}\n        timeFormat={\"HH:mm\"}\n        onKeyDown={(e) => {\n            e.preventDefault();\n         }}\n      />\n      </FormGroup>\n  <Button onClick={createReservation}>\n    Submit\n  </Button>\n  </Form>\n  )\n}\n\nexport default ReservationForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}